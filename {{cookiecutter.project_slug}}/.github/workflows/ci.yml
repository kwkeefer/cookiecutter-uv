{%- if cookiecutter.use_github_actions == 'yes' %}
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["{{ cookiecutter.python_version }}"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
    
    - name: Set up Python ${{ '{{' }} matrix.python-version {{ '}}' }}
      run: uv python install ${{ '{{' }} matrix.python-version {{ '}}' }}
    
    - name: Install dependencies
      run: |
        uv sync --all-extras
    
    - name: Lint with ruff
      run: |
        uv run ruff check src/ tests/
    
    - name: Type check with mypy
      run: |
        uv run mypy src/
    
    - name: Test with pytest
      run: |
        uv run pytest tests/ --cov={{ cookiecutter.package_name }} --cov-report=xml --cov-report=term
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Build package
      run: |
        uv build
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

{%- if cookiecutter.use_docker == 'yes' %}

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: {{ cookiecutter.project_slug }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
{%- endif %}
{%- endif %}